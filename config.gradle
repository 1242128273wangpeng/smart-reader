void log(def str) {
    System.err.println("gradle: " + str)
}

ext {

    javaMaxHeapSize = '8G'

    compileSdkVersion = 27

    minSdkVersion = 14
    targetSdkVersion = 22

    minifyEnable = false
    shrinkResEnable = minifyEnable

    kotlin_version = '1.2.10'
    support_version = '27.1.1'
    arouter_api_version = '1.3.1'
    arouter_compiler_version = '1.1.4'
    arch_version = '1.1.0'
    media_version = '1.7.6182_noinmobi'

    // 广告默认开启
    hasad = true
    // 无广告列表
    noadList = ['cn.qbmfrmxs.reader', 'cn.mfxsqbyd.reader', "cn.qbmfkkydq.reader"]

    def appPackageIDConfig = [
            qbmfxsydq: "cc.quanben.novel",//五步替
            mfqbxssc : "cc.kdqbxs.reader", //快读替
            zsmfqbxs : "cc.mianfeinovel", //阅微替
            qbzsydq  : "cn.qbzsydsq.reader",//全本追书阅读器
            txtqbmfxs: "cc.lianzainovel", //鸿雁替
            qbmfkdxs : "cc.quanbennovel", //今日多看
            txtqbdzs : "cc.remennovel",   //智胜电子书替
            txtqbmfyd: "cn.txtqbmfyd.reader",//TXT全本免费阅读(新壳1)
            mfxsqbyd : "cn.mfxsqbyd.reader",//免费小说全本阅读 (新壳2)
            qbmfrmxs : "cn.qbmfrmxs.reader", //全本免费热门小说(新壳3)
            qbmfkkydq: "cn.qbmfkkydq.reader" //全本免费快看阅读器(新壳4)
    ]

    // 改完记得重新编译项目
    def appName = "txtqbmfyd"
    defaultPublishConfig = appName + 'Debug'
    applicationId = appPackageIDConfig.get(appName)

    def startParameter = project.getGradle().getStartParameter()
    log(" = = = = = = = = = = = = = = = = = = = = = = = = ")
    log(startParameter)
    log(" = = = = = = = = = = = = = = = = = = = = = = = = ")
    log(project.getProperties())
    log(" = = = = = = = = = = = = = = = = = = = = = = = = ")

    if (!startParameter.taskRequests.isEmpty()) {
        def arg0 = startParameter.taskRequests[0].args[0]
        log(arg0)
        if (project.hasProperty("BuildTask") && !arg0.isEmpty()) {
            def isDebug = arg0.contains("Debug")
            def app = BuildTask

            log(app)

            if (!appPackageIDConfig.containsKey(app)) {
                throw new RuntimeException("app not found: $app")
            }
            applicationId = appPackageIDConfig.get(app)
            if (isDebug) {
                defaultPublishConfig = app + "Debug"
            } else {
                defaultPublishConfig = app + "Release"
            }

            hasad = !noadList.contains(applicationId)

            log("applicationId: " + applicationId)
            log("defaultPublishConfig: " + defaultPublishConfig)
            log("hasad: " + hasad)
        }
    }

}